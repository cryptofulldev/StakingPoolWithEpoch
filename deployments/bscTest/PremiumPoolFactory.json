{
  "address": "0xD6Acb8A4B46eDFd4dEeA1Fe29A8a2b5534491d77",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minimum",
          "type": "uint256"
        }
      ],
      "name": "newPremiumPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3c225d4084bda90d53b017d2a1f20a0d0587864e7b9c78d832ae160559c3690f",
  "receipt": {
    "to": null,
    "from": "0x5569BDF4e02cec3fE459796e3d0e741616029fA4",
    "contractAddress": "0xD6Acb8A4B46eDFd4dEeA1Fe29A8a2b5534491d77",
    "transactionIndex": 3,
    "gasUsed": "584676",
    "logsBloom": "0x
    "blockHash": "0xa0ac57175dd93ee8a4eecd60f74cfc0c85c095c2ac37c8fa01f8e2f29109d6b4",
    "transactionHash": "0x3c225d4084bda90d53b017d2a1f20a0d0587864e7b9c78d832ae160559c3690f",
    "logs": [],
    "blockNumber": 12495869,
    "cumulativeGasUsed": "1185531",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "19e0abe8682bfe9c8a283fc55415ca6e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minimum\",\"type\":\"uint256\"}],\"name\":\"newPremiumPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/factories/PremiumPoolFactory.sol\":\"PremiumPoolFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"contracts/PremiumPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity 0.8.0;\\r\\n\\r\\nimport \\\"./libraries/TransferHelper.sol\\\";\\r\\nimport \\\"./interfaces/IPremiumPool.sol\\\";\\r\\n\\r\\ncontract PremiumPool is IPremiumPool {\\r\\n    address private cohort;\\r\\n\\r\\n    mapping(uint16 => uint256) private _balances; // protocol => premium\\r\\n    mapping(uint16 => uint256) private _premiumReward; // protocol => total premium reward\\r\\n\\r\\n    uint256 private _minimumPremium;\\r\\n    address public override currency;\\r\\n\\r\\n    event PremiumDeposited(uint16 indexed protocolIdx, uint256 amount);\\r\\n    event TransferAsset(address indexed _to, uint256 _amount);\\r\\n\\r\\n    constructor(\\r\\n        address _cohort,\\r\\n        address _currency,\\r\\n        uint256 _minimum\\r\\n    ) {\\r\\n        cohort = _cohort;\\r\\n        currency = _currency;\\r\\n        _minimumPremium = _minimum;\\r\\n    }\\r\\n\\r\\n    modifier onlyCohort() {\\r\\n        require(msg.sender == cohort, \\\"UnoRe: Not cohort\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function balanceOf(uint16 _protocolIdx) external view override returns (uint256) {\\r\\n        return _balances[_protocolIdx];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev This function gives the total premium reward after coverage\\r\\n     */\\r\\n    function premiumRewardOf(uint16 _protocolIdx) external view override returns (uint256) {\\r\\n        return _premiumReward[_protocolIdx] == 0 ? _balances[_protocolIdx] : _premiumReward[_protocolIdx];\\r\\n    }\\r\\n\\r\\n    function minimumPremium() external view override returns (uint256) {\\r\\n        return _minimumPremium;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Once premiumReward is set, it is fixed value, not changed according to balance\\r\\n     */\\r\\n    function setPremiumReward(uint16 _protocolIdx) external override onlyCohort {\\r\\n        _premiumReward[_protocolIdx] = _balances[_protocolIdx];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * It is a bit confusing thing, there's only balance increase without transfer.\\r\\n     * But it is Okay, because this PremiumPool and depositPremium function is fully controlled\\r\\n     * by Cohort and depositPremium function in Cohort smart contract.\\r\\n     */\\r\\n    function depositPremium(uint16 _protocolIdx, uint256 _amount) external override onlyCohort {\\r\\n        _balances[_protocolIdx] += _amount;\\r\\n        emit PremiumDeposited(_protocolIdx, _amount);\\r\\n    }\\r\\n\\r\\n    function withdrawPremium(\\r\\n        address _to,\\r\\n        uint16 _protocolIdx,\\r\\n        uint256 _amount\\r\\n    ) external override onlyCohort {\\r\\n        require(_balances[_protocolIdx] >= _amount, \\\"UnoRe: Insufficient Premium\\\");\\r\\n        _balances[_protocolIdx] -= _amount;\\r\\n        TransferHelper.safeTransfer(currency, _to, _amount);\\r\\n    }\\r\\n\\r\\n    function transferAsset(\\r\\n        uint16 _protocolIdx,\\r\\n        address _to,\\r\\n        uint256 _amount\\r\\n    ) external override onlyCohort {\\r\\n        _balances[_protocolIdx] -= _amount;\\r\\n        TransferHelper.safeTransfer(currency, _to, _amount);\\r\\n        emit TransferAsset(_to, _amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd1eed50b1668a5a6751c9b5f8c88cb95e9b75aa2c9c9fde1b9c2433b3633f701\",\"license\":\"GPL-3.0\"},\"contracts/factories/PremiumPoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity 0.8.0;\\r\\n\\r\\nimport \\\"../PremiumPool.sol\\\";\\r\\nimport \\\"../interfaces/IPremiumPoolFactory.sol\\\";\\r\\n\\r\\ncontract PremiumPoolFactory is IPremiumPoolFactory {\\r\\n    constructor() {}\\r\\n\\r\\n    function newPremiumPool(address _currency, uint256 _minimum) external override returns (address) {\\r\\n        PremiumPool _premiumPool = new PremiumPool(msg.sender, _currency, _minimum);\\r\\n        address _premiumPoolAddr = address(_premiumPool);\\r\\n\\r\\n        return _premiumPoolAddr;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x225421c3d6528777814e8d2029e03e07d3e8cf71ec49be2378bf061fc1adbea7\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IPremiumPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity 0.8.0;\\r\\n\\r\\ninterface IPremiumPool {\\r\\n    function depositPremium(uint16 _protocolIdx, uint256 _amount) external;\\r\\n\\r\\n    function withdrawPremium(\\r\\n        address _to,\\r\\n        uint16 _protocolIdx,\\r\\n        uint256 _amount\\r\\n    ) external;\\r\\n\\r\\n    function transferAsset(\\r\\n        uint16 _protocolIdx,\\r\\n        address _to,\\r\\n        uint256 _amount\\r\\n    ) external;\\r\\n\\r\\n    function minimumPremium() external returns (uint256);\\r\\n\\r\\n    function balanceOf(uint16 _protocolIdx) external view returns (uint256);\\r\\n\\r\\n    function premiumRewardOf(uint16 _protocolIdx) external returns (uint256);\\r\\n\\r\\n    function currency() external view returns (address);\\r\\n\\r\\n    function setPremiumReward(uint16 _protocolIdx) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x454754c54b6e32d8e6fe61d319f87cdbd4edc754188a66234d8b9a5e409173b3\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IPremiumPoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity 0.8.0;\\r\\n\\r\\ninterface IPremiumPoolFactory {\\r\\n    function newPremiumPool(address _currency, uint256 _minimum) external returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x4a74abe2bf65ddb98ad06b715d6929e311b881ffb4430ad69410408fccb58e27\",\"license\":\"GPL-3.0\"},\"contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\npragma solidity 0.8.0;\\r\\n\\r\\n// from Uniswap TransferHelper library\\r\\nlibrary TransferHelper {\\r\\n    function safeTransfer(\\r\\n        address token,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) internal {\\r\\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\\r\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\\r\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::safeTransfer: transfer failed\\\");\\r\\n    }\\r\\n\\r\\n    function safeTransferFrom(\\r\\n        address token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) internal {\\r\\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\\r\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\\r\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TransferHelper::transferFrom: transferFrom failed\\\");\\r\\n    }\\r\\n\\r\\n    function safeTransferETH(address to, uint256 value) internal {\\r\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\r\\n        require(success, \\\"TransferHelper::safeTransferETH: ETH transfer failed\\\");\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xda9206acf682d547baa42aba5fbc029e343e2f3c3a22f48ed5adae65f1c68f9e\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506109a0806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b001e09a14610030575b600080fd5b61004361003e3660046100a9565b610059565b60405161005091906100df565b60405180910390f35b60008033848460405161006b9061009c565b610077939291906100f3565b604051809103906000f080158015610093573d6000803e3d6000fd5b50949350505050565b6108538061011883390190565b600080604083850312156100bb578182fd5b82356001600160a01b03811681146100d1578283fd5b946020939093013593505050565b6001600160a01b0391909116815260200190565b6001600160a01b03938416815291909216602082015260408101919091526060019056fe608060405234801561001057600080fd5b5060405161085338038061085383398101604081905261002f91610083565b600080546001600160a01b039485166001600160a01b03199182161790915560048054939094169216919091179091556003556100be565b80516001600160a01b038116811461007e57600080fd5b919050565b600080600060608486031215610097578283fd5b6100a084610067565b92506100ae60208501610067565b9150604084015190509250925092565b610786806100cd6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638f12167c1161005b5780638f12167c146100e6578063bcd84a71146100f9578063cfbff97d1461010c578063e5a6b10f1461011f57610088565b8063087d8d011461008d5780633f62327d146100ab5780636c91eaf0146100c057806376eb4a7a146100d3575b600080fd5b610095610134565b6040516100a29190610702565b60405180910390f35b6100be6100b93660046105b8565b61013a565b005b6100956100ce366004610573565b6101d7565b6100be6100e136600461058d565b610226565b6100be6100f4366004610511565b6102d5565b6100be610107366004610573565b610376565b61009561011a366004610573565b6103c1565b6101276103d7565b6040516100a2919061061a565b60035490565b6000546001600160a01b0316331461016d5760405162461bcd60e51b81526004016101649061067e565b60405180910390fd5b61ffff82166000908152600160205260408120805483929061019090849061070b565b925050819055508161ffff167fcbaed5fcfc493a166ff2613b47067c7daa5df612fb4bbc5582838d2acdc720fb826040516101cb9190610702565b60405180910390a25050565b61ffff8116600090815260026020526040812054156102095761ffff821660009081526002602052604090205461021e565b61ffff82166000908152600160205260409020545b90505b919050565b6000546001600160a01b031633146102505760405162461bcd60e51b81526004016101649061067e565b61ffff831660009081526001602052604081208054839290610273908490610723565b909155505060045461028f906001600160a01b031683836103e6565b816001600160a01b03167f9ebd923e97d4ce72c1c254dcf6f6c9e2dff02701382ff17d7b0b6e8897c9aafb826040516102c89190610702565b60405180910390a2505050565b6000546001600160a01b031633146102ff5760405162461bcd60e51b81526004016101649061067e565b61ffff82166000908152600160205260409020548111156103325760405162461bcd60e51b815260040161016490610647565b61ffff821660009081526001602052604081208054839290610355908490610723565b9091555050600454610371906001600160a01b031684836103e6565b505050565b6000546001600160a01b031633146103a05760405162461bcd60e51b81526004016101649061067e565b61ffff16600090815260016020908152604080832054600290925290912055565b61ffff1660009081526001602052604090205490565b6004546001600160a01b031681565b600080846001600160a01b031663a9059cbb858560405160240161040b92919061062e565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161045991906105e1565b6000604051808303816000865af19150503d8060008114610496576040519150601f19603f3d011682016040523d82523d6000602084013e61049b565b606091505b50915091508180156104c55750805115806104c55750808060200190518101906104c5919061054c565b6104e15760405162461bcd60e51b8152600401610164906106b5565b5050505050565b80356001600160a01b038116811461022157600080fd5b803561ffff8116811461022157600080fd5b600080600060608486031215610525578283fd5b61052e846104e8565b925061053c602085016104ff565b9150604084013590509250925092565b60006020828403121561055d578081fd5b8151801515811461056c578182fd5b9392505050565b600060208284031215610584578081fd5b61056c826104ff565b6000806000606084860312156105a1578283fd5b6105aa846104ff565b925061053c602085016104e8565b600080604083850312156105ca578182fd5b6105d3836104ff565b946020939093013593505050565b60008251815b8181101561060157602081860181015185830152016105e7565b8181111561060f5782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252601b908201527f556e6f52653a20496e73756666696369656e74205072656d69756d0000000000604082015260600190565b60208082526011908201527f556e6f52653a204e6f7420636f686f7274000000000000000000000000000000604082015260600190565b6020808252602d908201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260408201526c185b9cd9995c8819985a5b1959609a1b606082015260800190565b90815260200190565b6000821982111561071e5761071e61073a565b500190565b6000828210156107355761073561073a565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202bc9293adb9931cc3af7e262dd499baadbb0bcfd97ba0d47d8da2b8d0db38cdc64736f6c63430008000033a2646970667358221220cc9569371a189916b485844a4c67890e26451e652384f9740a5296261f70ac3964736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b001e09a14610030575b600080fd5b61004361003e3660046100a9565b610059565b60405161005091906100df565b60405180910390f35b60008033848460405161006b9061009c565b610077939291906100f3565b604051809103906000f080158015610093573d6000803e3d6000fd5b50949350505050565b6108538061011883390190565b600080604083850312156100bb578182fd5b82356001600160a01b03811681146100d1578283fd5b946020939093013593505050565b6001600160a01b0391909116815260200190565b6001600160a01b03938416815291909216602082015260408101919091526060019056fe608060405234801561001057600080fd5b5060405161085338038061085383398101604081905261002f91610083565b600080546001600160a01b039485166001600160a01b03199182161790915560048054939094169216919091179091556003556100be565b80516001600160a01b038116811461007e57600080fd5b919050565b600080600060608486031215610097578283fd5b6100a084610067565b92506100ae60208501610067565b9150604084015190509250925092565b610786806100cd6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638f12167c1161005b5780638f12167c146100e6578063bcd84a71146100f9578063cfbff97d1461010c578063e5a6b10f1461011f57610088565b8063087d8d011461008d5780633f62327d146100ab5780636c91eaf0146100c057806376eb4a7a146100d3575b600080fd5b610095610134565b6040516100a29190610702565b60405180910390f35b6100be6100b93660046105b8565b61013a565b005b6100956100ce366004610573565b6101d7565b6100be6100e136600461058d565b610226565b6100be6100f4366004610511565b6102d5565b6100be610107366004610573565b610376565b61009561011a366004610573565b6103c1565b6101276103d7565b6040516100a2919061061a565b60035490565b6000546001600160a01b0316331461016d5760405162461bcd60e51b81526004016101649061067e565b60405180910390fd5b61ffff82166000908152600160205260408120805483929061019090849061070b565b925050819055508161ffff167fcbaed5fcfc493a166ff2613b47067c7daa5df612fb4bbc5582838d2acdc720fb826040516101cb9190610702565b60405180910390a25050565b61ffff8116600090815260026020526040812054156102095761ffff821660009081526002602052604090205461021e565b61ffff82166000908152600160205260409020545b90505b919050565b6000546001600160a01b031633146102505760405162461bcd60e51b81526004016101649061067e565b61ffff831660009081526001602052604081208054839290610273908490610723565b909155505060045461028f906001600160a01b031683836103e6565b816001600160a01b03167f9ebd923e97d4ce72c1c254dcf6f6c9e2dff02701382ff17d7b0b6e8897c9aafb826040516102c89190610702565b60405180910390a2505050565b6000546001600160a01b031633146102ff5760405162461bcd60e51b81526004016101649061067e565b61ffff82166000908152600160205260409020548111156103325760405162461bcd60e51b815260040161016490610647565b61ffff821660009081526001602052604081208054839290610355908490610723565b9091555050600454610371906001600160a01b031684836103e6565b505050565b6000546001600160a01b031633146103a05760405162461bcd60e51b81526004016101649061067e565b61ffff16600090815260016020908152604080832054600290925290912055565b61ffff1660009081526001602052604090205490565b6004546001600160a01b031681565b600080846001600160a01b031663a9059cbb858560405160240161040b92919061062e565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161045991906105e1565b6000604051808303816000865af19150503d8060008114610496576040519150601f19603f3d011682016040523d82523d6000602084013e61049b565b606091505b50915091508180156104c55750805115806104c55750808060200190518101906104c5919061054c565b6104e15760405162461bcd60e51b8152600401610164906106b5565b5050505050565b80356001600160a01b038116811461022157600080fd5b803561ffff8116811461022157600080fd5b600080600060608486031215610525578283fd5b61052e846104e8565b925061053c602085016104ff565b9150604084013590509250925092565b60006020828403121561055d578081fd5b8151801515811461056c578182fd5b9392505050565b600060208284031215610584578081fd5b61056c826104ff565b6000806000606084860312156105a1578283fd5b6105aa846104ff565b925061053c602085016104e8565b600080604083850312156105ca578182fd5b6105d3836104ff565b946020939093013593505050565b60008251815b8181101561060157602081860181015185830152016105e7565b8181111561060f5782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252601b908201527f556e6f52653a20496e73756666696369656e74205072656d69756d0000000000604082015260600190565b60208082526011908201527f556e6f52653a204e6f7420636f686f7274000000000000000000000000000000604082015260600190565b6020808252602d908201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260408201526c185b9cd9995c8819985a5b1959609a1b606082015260800190565b90815260200190565b6000821982111561071e5761071e61073a565b500190565b6000828210156107355761073561073a565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202bc9293adb9931cc3af7e262dd499baadbb0bcfd97ba0d47d8da2b8d0db38cdc64736f6c63430008000033a2646970667358221220cc9569371a189916b485844a4c67890e26451e652384f9740a5296261f70ac3964736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}